void build(sets::Builder& b) {
  { 
    sets::Group g(b, "");
    b.Label(kk::datetime_display, "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", data.dateTimeStr.c_str());
    b.Label(kk::blinds_status, "–°—Ç–∞—Ç—É—Å –∂–∞–ª—é–∑–∏", data.blindsStatus.c_str());

    if (b.beginButtons()) {
      if (b.Button(kk::btnOpen, "‚¨Ü–û—Ç–∫—Ä—ã—Ç—å", data.isBlindsOpen ? sets::Colors::Gray : sets::Colors::Default)) {
        if (!data.isBlindsOpen && !data.isBlindsMoving) handleOpenButton();
      }
      if (b.Button(kk::btnClose, "‚¨á–ó–∞–∫—Ä—ã—Ç—å", !data.isBlindsOpen ? sets::Colors::Gray : sets::Colors::Red)) {
        if (data.isBlindsOpen && !data.isBlindsMoving) handleCloseButton();
      }
      b.endButtons();
    }
  }

  if (b.beginGroup("")) {
    if (b.beginMenu("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")) {
      b.Time(kk::timeOpen, "–í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è");
      b.Time(kk::timeClose, "–í—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è");
      b.Number(kk::motorRunTime, "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (–º—Å)");            

      { 
        sets::Group g(b, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ WiFiüõú");
        b.Input(kk::wifi_ssid, "SSID");
        b.Pass(kk::wifi_pass, "–ü–∞—Ä–æ–ª—å");
    
        if (b.Button(kk::apply, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—åüîÅ")) {
          db.update();
          ESP.restart();
        }
      }    
      b.endMenu();
    }
    b.endGroup();
  }
}

// –§—É–Ω–∫—Ü–∏—è update –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –í–ù–ï —Ñ—É–Ω–∫—Ü–∏–∏ build!
void update(sets::Updater& upd) {
    upd.update(kk::datetime_display, data.dateTimeStr.c_str());
    upd.update(kk::blinds_status, data.blindsStatus.c_str());

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ –ë–î
    timeToOpen = db[kk::timeOpen].toInt();
    timeToClose = db[kk::timeClose].toInt();
    motorTime = db[kk::motorRunTime].toInt();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
    if (motorTime < 100) motorTime = 100;
    if (motorTime > 30000) motorTime = 30000;
    motorTime = motorTime / 100 * 100;
    
    db[kk::motorRunTime] = motorTime;
}